import { gql } from 'apollo-server-express';

export const PKXType = gql`
  "Personal info of a Pokemon. The structure is from PKHeX."
  type PersonalInfo {
    HP: Int
    ATK: Int
    DEF: Int
    SPE: Int
    SPA: Int
    SPD: Int
    Type1: Int
    Type2: Int
    CatchRate: Int
    EvoStage: Int
    EV_HP: Int
    EV_ATK: Int
    EV_DEF: Int
    EV_SPE: Int
    EV_SPA: Int
    EV_SPD: Int
    Item1: Int
    Item2: Int
    Item3: Int
    Gender: Int
    HatchCycles: Int
    BaseFriendship: Int
    EXPGrowth: Int
    EggGroup1: Int
    EggGroup2: Int
    Ability1: Int
    Ability2: Int
    AbilityH: Int
    EscapeRate: Int
    FormeSprite: Int
    FormeCount: Int
    Color: Int
    IsPresentInGame: Boolean
    SpriteForme: Boolean
    BaseEXP: Int
    Height: Int
    Weight: Int
    Species: Int
    BaseSpecies: Int
    BaseSpeciesForm: Int
    Flags: Int
    PokeDexIndex: Int
    FormIndex: Int
    IsDualGender: Boolean
    FixedGender: Int
    Genderless: Boolean
    OnlyFemale: Boolean
    OnlyMale: Boolean
    HasFormes: Boolean
    BST: Int
    SpecialTutors: [String]
    TypeTutors: [Boolean]
    TMHM: [Boolean]
    EggGroups: [Int]
    Types: [Int]
    Stats: [Int]
    Abilities: [Int]
    Items: [Int]
  }

  "Object representing a PKX.  Most of the structure is from PKHeX."
  type PKX {
    Identifier: String
    Format: Int
    Data: String
    CurrentFriendship: Int
    OppositeFriendship: Int
    SIZE_PARTY: Int
    SIZE_STORED: Int
    Nickname_Trash: String
    HT_Trash: String
    OT_Trash: String
    WasLink: Boolean
    WasEvent: Boolean
    WasEventEgg: Boolean
    MaxIV: Int
    MaxEV: Int
    OTLength: Int
    NickLength: Int
    PSV: Int
    TSV: Int
    IsUntraded: Boolean
    Characteristic: Int
    EncryptionConstant: String
    Sanity: Int
    Checksum: Int
    Species: Int
    HeldItem: Int
    TID: Int
    SID: Int
    EXP: Int
    Ability: Int
    AbilityNumber: Int
    Favorite: Boolean
    CanGigantamax: Boolean
    MarkValue: Int
    PID: String
    Nature: Int
    StatNature: Int
    FatefulEncounter: Boolean
    Flag2: Boolean
    Gender: Int
    AltForm: Int
    EV_HP: Int
    EV_ATK: Int
    EV_DEF: Int
    EV_SPE: Int
    EV_SPA: Int
    EV_SPD: Int
    CNT_Cool: Int
    CNT_Beauty: Int
    CNT_Cute: Int
    CNT_Smart: Int
    CNT_Tough: Int
    CNT_Sheen: Int
    PKRS_Days: Int
    PKRS_Strain: Int
    RibbonChampionKalos: Boolean
    RibbonChampionG3Hoenn: Boolean
    RibbonChampionSinnoh: Boolean
    RibbonBestFriends: Boolean
    RibbonTraining: Boolean
    RibbonBattlerSkillful: Boolean
    RibbonBattlerExpert: Boolean
    RibbonEffort: Boolean
    RibbonAlert: Boolean
    RibbonShock: Boolean
    RibbonDowncast: Boolean
    RibbonCareless: Boolean
    RibbonRelax: Boolean
    RibbonSnooze: Boolean
    RibbonSmile: Boolean
    RibbonGorgeous: Boolean
    RibbonRoyal: Boolean
    RibbonGorgeousRoyal: Boolean
    RibbonArtist: Boolean
    RibbonFootprint: Boolean
    RibbonRecord: Boolean
    RibbonLegend: Boolean
    RibbonCountry: Boolean
    RibbonNational: Boolean
    RibbonEarth: Boolean
    RibbonWorld: Boolean
    RibbonClassic: Boolean
    RibbonPremier: Boolean
    RibbonEvent: Boolean
    RibbonBirthday: Boolean
    RibbonSpecial: Boolean
    RibbonSouvenir: Boolean
    RibbonWishing: Boolean
    RibbonChampionBattle: Boolean
    RibbonChampionRegional: Boolean
    RibbonChampionNational: Boolean
    RibbonChampionWorld: Boolean
    HasContestMemoryRibbon: Boolean
    HasBattleMemoryRibbon: Boolean
    RibbonChampionG6Hoenn: Boolean
    RibbonContestStar: Boolean
    RibbonMasterCoolness: Boolean
    RibbonMasterBeauty: Boolean
    RibbonMasterCuteness: Boolean
    RibbonMasterCleverness: Boolean
    RibbonMasterToughness: Boolean
    RibbonChampionAlola: Boolean
    RibbonBattleRoyale: Boolean
    RibbonBattleTreeGreat: Boolean
    RibbonBattleTreeMaster: Boolean
    RibbonChampionGalar: Boolean
    RibbonTowerMaster: Boolean
    RibbonMasterRank: Boolean
    RibbonMarkLunchtime: Boolean
    RibbonMarkSleepyTime: Boolean
    RibbonMarkDusk: Boolean
    RibbonMarkDawn: Boolean
    RibbonMarkCloudy: Boolean
    RibbonMarkRainy: Boolean
    RibbonMarkStormy: Boolean
    RibbonMarkSnowy: Boolean
    RibbonMarkBlizzard: Boolean
    RibbonMarkDry: Boolean
    RibbonMarkSandstorm: Boolean
    RibbonCountMemoryContest: Int
    RibbonCountMemoryBattle: Int
    RibbonMarkMisty: Boolean
    RibbonMarkDestiny: Boolean
    RibbonMarkFishing: Boolean
    RibbonMarkCurry: Boolean
    RibbonMarkUncommon: Boolean
    RibbonMarkRare: Boolean
    RibbonMarkRowdy: Boolean
    RibbonMarkAbsentMinded: Boolean
    RibbonMarkJittery: Boolean
    RibbonMarkExcited: Boolean
    RibbonMarkCharismatic: Boolean
    RibbonMarkCalmness: Boolean
    RibbonMarkIntense: Boolean
    RibbonMarkZonedOut: Boolean
    RibbonMarkJoyful: Boolean
    RibbonMarkAngry: Boolean
    RibbonMarkSmiley: Boolean
    RibbonMarkTeary: Boolean
    RibbonMarkUpbeat: Boolean
    RibbonMarkPeeved: Boolean
    RibbonMarkIntellectual: Boolean
    RibbonMarkFerocious: Boolean
    RibbonMarkCrafty: Boolean
    RibbonMarkScowling: Boolean
    RibbonMarkKindly: Boolean
    RibbonMarkFlustered: Boolean
    RibbonMarkPumpedUp: Boolean
    RibbonMarkZeroEnergy: Boolean
    RibbonMarkPrideful: Boolean
    RibbonMarkUnsure: Boolean
    RibbonMarkHumble: Boolean
    RibbonMarkThorny: Boolean
    RibbonMarkVigor: Boolean
    RibbonMarkSlump: Boolean
    RIB44_2: Boolean
    RIB44_3: Boolean
    RIB44_4: Boolean
    RIB44_5: Boolean
    RIB44_6: Boolean
    RIB44_7: Boolean
    RIB45_0: Boolean
    RIB45_1: Boolean
    RIB45_2: Boolean
    RIB45_3: Boolean
    RIB45_4: Boolean
    RIB45_5: Boolean
    RIB45_6: Boolean
    RIB45_7: Boolean
    RIB46_0: Boolean
    RIB46_1: Boolean
    RIB46_2: Boolean
    RIB46_3: Boolean
    RIB46_4: Boolean
    RIB46_5: Boolean
    RIB46_6: Boolean
    RIB46_7: Boolean
    RIB47_0: Boolean
    RIB47_1: Boolean
    RIB47_2: Boolean
    RIB47_3: Boolean
    RIB47_4: Boolean
    RIB47_5: Boolean
    RIB47_6: Boolean
    RIB47_7: Boolean
    U48: Int
    HeightScalar: Int
    WeightScalar: Int
    Nickname: String
    Move1: Int
    Move2: Int
    Move3: Int
    Move4: Int
    Move1_PP: Int
    Move2_PP: Int
    Move3_PP: Int
    Move4_PP: Int
    Move1_PPUps: Int
    Move2_PPUps: Int
    Move3_PPUps: Int
    Move4_PPUps: Int
    RelearnMove1: Int
    RelearnMove2: Int
    RelearnMove3: Int
    RelearnMove4: Int
    Stat_HPCurrent: Int
    IV_HP: Int
    IV_ATK: Int
    IV_DEF: Int
    IV_SPE: Int
    IV_SPA: Int
    IV_SPD: Int
    IsEgg: Boolean
    IsNicknamed: Boolean
    DynamaxLevel: Int
    Status_Condition: Int
    Unk98: Int
    HT_Name: String
    HT_Gender: Int
    HT_Language: Int
    CurrentHandler: Int
    HT_TrainerID: Int
    HT_Friendship: Int
    HT_Intensity: Int
    HT_Memory: Int
    HT_Feeling: Int
    HT_TextVar: Int
    Fullness: Int
    Enjoyment: Int
    Version: Int
    Country: Int
    Region: Int
    ConsoleRegion: Int
    Language: Int
    UnkE3: Int
    FormArgument: Int
    AffixedRibbon: Int
    OT_Name: String
    OT_Friendship: Int
    OT_Intensity: Int
    OT_Memory: Int
    OT_TextVar: Int
    OT_Feeling: Int
    Egg_Year: Int
    Egg_Month: Int
    Egg_Day: Int
    Met_Year: Int
    Met_Month: Int
    Met_Day: Int
    Egg_Location: Int
    Met_Location: Int
    Ball: Int
    Met_Level: Int
    OT_Gender: Int
    HyperTrainFlags: Int
    HT_HP: Boolean
    HT_ATK: Boolean
    HT_DEF: Boolean
    HT_SPA: Boolean
    HT_SPD: Boolean
    HT_SPE: Boolean
    Stat_Level: Int
    Stat_HPMax: Int
    Stat_ATK: Int
    Stat_DEF: Int
    Stat_SPE: Int
    Stat_SPA: Int
    Stat_SPD: Int
    DynamaxType: Int
    MaxMoveID: Int
    MaxSpeciesID: Int
    MaxAbilityID: Int
    MaxItemID: Int
    MaxBallID: Int
    MaxGameID: Int
    Extension: String
    Box: Int
    Slot: Int
    EncryptedPartyData: String
    EncryptedBoxData: String
    DecryptedPartyData: String
    DecryptedBoxData: String
    Valid: Boolean
    Japanese: Boolean
    Korean: Boolean
    Chinese: Boolean
    HT_Affection: Int
    MetDate: String
    EggMetDate: String
    OT_Affection: Int
    EncounterType: Int
    MinGameID: Int
    SpecForm: Int
    SpriteItem: Int
    IsShiny: Boolean
    StorageFlags: Int
    Locked: Boolean
    TrainerID7: Int
    TrainerSID7: Int
    ShinyXor: Int
    DisplayTID: Int
    DisplaySID: Int
    E: Boolean
    FRLG: Boolean
    Pt: Boolean
    HGSS: Boolean
    BW: Boolean
    B2W2: Boolean
    XY: Boolean
    AO: Boolean
    SM: Boolean
    USUM: Boolean
    GO: Boolean
    VC1: Boolean
    VC2: Boolean
    GG: Boolean
    SWSH: Boolean
    VC: Boolean
    Gen8: Boolean
    Gen7: Boolean
    Gen6: Boolean
    Gen5: Boolean
    Gen4: Boolean
    Gen3: Boolean
    Gen2: Boolean
    Gen1: Boolean
    GenU: Boolean
    GenNumber: Int
    DebutGeneration: Int
    PKRS_Infected: Boolean
    PKRS_Cured: Boolean
    ChecksumValid: Boolean
    CurrentLevel: Int
    MarkCircle: Int
    MarkTriangle: Int
    MarkSquare: Int
    MarkHeart: Int
    MarkStar: Int
    MarkDiamond: Int
    IVTotal: Int
    EVTotal: Int
    MaximumIV: Int
    FlawlessIVCount: Int
    FileName: String
    FileNameWithoutExtension: String
    PIDAbility: Int
    HPPower: Int
    HPType: Int
    TradebackStatus: Int
    Gen1_NotTradeback: Boolean
    Gen2_NotTradeback: Boolean
    WasEgg: Boolean
    WasBredEgg: Boolean
    WasGiftEgg: Boolean
    WasTradedEgg: Boolean
    IsTradedEgg: Boolean
    IsNative: Boolean
    IsOriginValid: Boolean
    HasOriginalMetLocation: Boolean
    PotentialRating: Int
    PartyStatsPresent: Boolean
    IsLegal: Boolean
    RelearnMoves: [Int]
    Moves: [Int]
    Stats: [Int]
    EVs: [Int]
    IVs: [Int]
    Markings: [Int]
    PersonalInfo: PersonalInfo
    ExtraBytes: [Int]
    "If true, the PKX can be viewed by anyone.  If false, only the owner and admins can view the PKX."
    isPublic: Boolean
    "Name of the collection the PKX is associated with."
    collection: String
  }

  "An object holding a PKX and a reference Id."
  type PKXDocument {
    "An Id which can be used to reference the PKX."
    id: String
    isPublic: Boolean
    owner: User
    pkx: PKX
  }
`;
