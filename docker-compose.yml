version: '3.7'
services:
  pkhex-lambda:
    image: lambci/lambda:dotnetcore2.1
    ports:
      - 9001:9001
    volumes:
      - ./PKHeX.Core-Lambda/bin/release/netcoreapp2.1/unzipped:/var/task
    environment:
      - DOCKER_LAMBDA_STAY_OPEN=true
      - AWS_LAMBDA_FUNCTION_HANDLER=PKHeXLambda::PKHeXLambda.Functions::ParsePKX
  pkhex-lambda-proxy:
    image: node:current-alpine
    working_dir: /app
    ports:
      - 5002:5000
    volumes:
      - ./PKHeX.Core-Lambda-proxy:/app
    environment:
      - PKHEX_LAMBDA_URL=http://pkhex-lambda:9001/2015-03-31/functions/myfunction/invocations
    entrypoint:
      - yarn
      - start
  api:
    image: node:current-alpine
    working_dir: /app
    ports:
      - 5000:5000
    volumes:
      - ./api:/app
      - ./docker-stubs/api/index.js:/app/index.js
      - ./docker-stubs/api/src/utils/create-context.js:/app/src/utils/create-context.js
    env_file:
      - ./api/.env
    entrypoint:
      - yarn
      - start
  auth:
    image: node:current-alpine
    working_dir: /app
    ports:
      - 5001:5000
    volumes:
      - ./discord-jwt:/app
      - ./docker-stubs/discord-jwt/index.js:/app/index.js
    env_file:
      - ./discord-jwt/.env
    entrypoint:
      - yarn
      - start
  web-app:
    image: node:current-alpine
    working_dir: /app
    ports:
      - 3000:3000
    volumes:
      - ./web-app:/app
    environment:
      - REACT_APP_API=http://localhost:5000/graphql
      - REACT_APP_LOGIN_URL=http://localhost:3000/
      - REACT_APP_VERSION=development
    entrypoint:
      - yarn
      - start
    tty: true
